# Exercise Step1-STEP1-CREATE-APPLICATION-WAR-FILE
#
# When running the build “jfrog rt gradlec” you will e prompt for the following: 
# Is the Gradle Artifactory Plugin already applied in the build script (y/n) [n]? Y
# Use Gradle wrapper (y/n) [n]? Y
# Resolve dependencies from Artifactory (y/n) [y]? Y
# Set Artifactory server ID (press Tab for options) [jfrogtraining]: us-site
# Set repository for dependencies resolution (press Tab for options): gradle-release
# Deploy artifacts to Artifactory (y/n) [y]? Y
# Set Artifactory server ID (press Tab for options) [jfrogtraining]: us-site
# Set repository for artifacts deployment (press Tab for options): gradle-release
# Deploy Maven descriptor (y/n) [n]? Y
# Deploy Ivy descriptor (y/n) [n]? n

step1-create1-application () {
   echo "step1-create1-application - building war application"
   build_name="${STEP1_BLDNAME}"
   build_no=$1
   rootDir=$PWD

   git clone https://github.com/jfrogtraining/project-examples
   cd project-examples/gradle-examples/4/gradle-example-publish
   chmod 775 gradlew
   echo "Build Number is ${build_no}"
   # create a build configuration file for a gradle build. The command's argument is a path to a new file which will be created by the command
   jfrog rt gradlec gradle-example.config 
   # To run a gradle build
   echo "Running gradle build"
   jfrog rt gradle "clean artifactoryPublish -b ./build.gradle" gradle-example.config --build-name=${build_name} --build-number=${build_no}
   # Environment variables are collected using the build-collect-env (bce) command.
   echo "Collecting environment varilable for buildinfo"
   jfrog rt bce ${build_name} ${build_no}
   echo "Collecting git info i.e. jira tickets"
   jfrog rt bag ${build_name} ${build_no} "${rootDir}/project-examples"
   # publish the accumulated build information for a build to Artifactory
   jfrog rt bp ${build_name} ${build_no} --server-id ${SERVER_ID}
   # Scan for vulnerabilities after you configure XRAY to watch your job 
   #jfrog rt bs ${build_name} ${build_no}
   echo "Successfully build application"
}