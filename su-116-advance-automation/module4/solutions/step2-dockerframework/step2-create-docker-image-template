# similar to downloadDependencies but with build name and number so that it can be included in buildinfo as dependencies
downloadDependenciesBuildInfo () {
  echo "Fetch tomcat for the later docker framework build"
  b_name=$1
  b_no=$2

  jfrog rt dl ${TOMCAT} ./tomcat/apache-tomcat-8.tar.gz --server-id ${REMOTE_ART_ID} --threads=5 --flat=true --props=swampup2019=ready --build-name=${b_name} --build-number=${b_no}
  echo "Fetch java for the later docker framework build"
  jfrog rt dl ${JDK} ./jdk/jdk-8-linux-x64.tar.gz --server-id ${REMOTE_ART_ID} --threads=5 --flat=true --props=swampup2019=ready --build-name=${b_name} --build-number=${b_no}
  echo "Fetch Helm Client for later helm chart"
  jfrog rt dl ${HELM} ./ --server-id ${REMOTE_ART_ID} --props=swampup2019=ready --build-name=${b_name} --build-number=${b_no}
}

step2-create-docker-image-template () {
  echo "step2-create-docker-image-template  - building docker base for web applications"
  docker_fmr_build_name="${STEP2_BLDNAME}"
  docker_fmr_build_no=$1
  rootDir=$PWD

  cd step2-dockerframework

  echo "Downloading dependencies"
  downloadDependenciesBuildInfo ${docker_fmr_build_name} ${docker_fmr_build_no}

  TAGNAME="${ARTDOCKER_REGISTRY}/docker-framework:${1}"
  TAGNAMELATEST="${ARTDOCKER_REGISTRY}/docker-framework:latest"
  echo $TAGNAME
  docker login $ARTDOCKER_REGISTRY -u $USER -p $ART_PASSWORD
  echo "Building docker base image"
  docker build -t $TAGNAME .
  docker tag $TAGNAME $TAGNAMELATEST
  echo "Publishing docker freamework base image to artifactory"
  jfrog rt dp $TAGNAME docker-virtual --build-name=${docker_fmr_build_name} --build-number=${docker_fmr_build_no} --server-id=${SERVER_ID}
  jfrog rt dp $TAGNAMELATEST docker-virtual --build-name=${docker_fmr_build_name} --build-number=${docker_fmr_build_no} --server-id=${SERVER_ID}
  echo "Collecting environment variable for buildinfo"
  jfrog rt bce ${docker_fmr_build_name} ${docker_fmr_build_no}
  echo  "publishing buildinfo"
  jfrog rt bp ${docker_fmr_build_name} ${docker_fmr_build_no} --server-id=${SERVER_ID}
  docker rmi $TAGNAME
  docker rmi $TAGNAMELATEST
  echo "Successfully deployed framework"
  cd ${rootDir}
}